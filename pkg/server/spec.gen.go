// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/1iuOQl+JQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
