// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
