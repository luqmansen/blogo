// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"NhjWezK+3fwvAAD//3Mk1clZHQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
