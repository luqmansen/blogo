// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package server

const (
	Petstore_authScopes = "petstore_auth.Scopes"
)

// Defines values for ReactRequestResourceKind.
const (
	ReactRequestResourceKindComment ReactRequestResourceKind = "comment"

	ReactRequestResourceKindPost ReactRequestResourceKind = "post"
)

// CommentRequest defines model for CommentRequest.
type CommentRequest struct {
	Content      string `json:"content"`
	ParentId     *int   `json:"parent_id,omitempty"`
	ParentPostId int    `json:"parent_post_id"`
}

// CommentResponse defines model for CommentResponse.
type CommentResponse struct {
	AuthorId       *int64  `json:"author_id,omitempty"`
	AuthorUsername *string `json:"author_username,omitempty"`
	Content        *string `json:"content,omitempty"`
	Id             *int64  `json:"id,omitempty"`

	// describe whether a post is already reacted by user, if tru
	IsReacted  *bool         `json:"is_reacted,omitempty"`
	ReactViews *[]ReactCount `json:"react_views,omitempty"`

	// replies of this comment
	Replies *[]CommentResponse `json:"replies,omitempty"`
}

// PostRequest defines model for PostRequest.
type PostRequest struct {
	Content string `json:"content"`
	Title   string `json:"title"`
}

// PostResponse defines model for PostResponse.
type PostResponse struct {
	AuthorId       *int64  `json:"author_id,omitempty"`
	AuthorUsername *string `json:"author_username,omitempty"`
	Content        *string `json:"content,omitempty"`
	Id             *int64  `json:"id,omitempty"`

	// describe whether a post is already reacted by user
	IsReacted  *bool         `json:"is_reacted,omitempty"`
	Name       *string       `json:"name,omitempty"`
	ReactViews *[]ReactCount `json:"react_views,omitempty"`

	// replies of the post
	Replies *[]CommentResponse `json:"replies,omitempty"`
}

// Response for multiple post
type PostsResponse []PostResponse

// describe count of reaction on a given resource (eg: post, comment)
type ReactCount struct {
	Count   *int `json:"count,omitempty"`
	ReactId *int `json:"react_id,omitempty"`
}

// ReactListResponse defines model for ReactListResponse.
type ReactListResponse []struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`

	// url of the react thumbnail
	ThumbnailImg *string `json:"thumbnail_img,omitempty"`
}

// ReactRequest defines model for ReactRequest.
type ReactRequest struct {
	// id of the react type. Get the id from react list endpoint
	ReactId      int64                    `json:"react_id"`
	ResourceId   int64                    `json:"resource_id"`
	ResourceKind ReactRequestResourceKind `json:"resource_kind"`
}

// ReactRequestResourceKind defines model for ReactRequest.ResourceKind.
type ReactRequestResourceKind string

// ResourceCreatedResponse defines model for ResourceCreatedResponse.
type ResourceCreatedResponse struct {
	Message *string `json:"message,omitempty"`
	Status  *string `json:"status,omitempty"`
}

// User defines model for User.
type User struct {
	Email     *string `json:"email,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	Id        *int64  `json:"id,omitempty"`
	LastName  *string `json:"lastName,omitempty"`
	Password  *string `json:"password,omitempty"`
	Phone     *string `json:"phone,omitempty"`

	// User Status
	UserStatus *int32  `json:"userStatus,omitempty"`
	Username   *string `json:"username,omitempty"`
}

// CommentId defines model for commentId.
type CommentId int

// PostId defines model for postId.
type PostId int64

// AddCommentJSONBody defines parameters for AddComment.
type AddCommentJSONBody CommentRequest

// CreatePostJSONBody defines parameters for CreatePost.
type CreatePostJSONBody PostRequest

// AddReactJSONBody defines parameters for AddReact.
type AddReactJSONBody ReactRequest

// CreateUserJSONBody defines parameters for CreateUser.
type CreateUserJSONBody User

// LoginUserParams defines parameters for LoginUser.
type LoginUserParams struct {
	// The user name for login
	Username *string `json:"username,omitempty"`

	// The password for login in clear text
	Password *string `json:"password,omitempty"`
}

// UpdateUserJSONBody defines parameters for UpdateUser.
type UpdateUserJSONBody User

// AddCommentJSONRequestBody defines body for AddComment for application/json ContentType.
type AddCommentJSONRequestBody AddCommentJSONBody

// CreatePostJSONRequestBody defines body for CreatePost for application/json ContentType.
type CreatePostJSONRequestBody CreatePostJSONBody

// AddReactJSONRequestBody defines body for AddReact for application/json ContentType.
type AddReactJSONRequestBody AddReactJSONBody

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody CreateUserJSONBody

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody UpdateUserJSONBody
