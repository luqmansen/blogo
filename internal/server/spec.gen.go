// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
