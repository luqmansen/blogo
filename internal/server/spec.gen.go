// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package server

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"ep+Mbzf/CwAA//+IPha60BwAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
